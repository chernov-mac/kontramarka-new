// Buttons
//
// Customized Bootstrap's buttons

.btn {
    padding: $btn-padding-y $btn-padding-x;
    line-height: $btn-line-height;
    font-size: $btn-font-size;
    outline: none;
	text-decoration: none;
    cursor: pointer;

    &.processing {
        i {
            display: inline-block;
            animation: $spin-time $spin-easing 0s infinite normal spin;
        }

        &--steps i {
            animation: $spin-time * 2 steps(4) 0s infinite normal spin-steps;
        }
    }
    &-mobile {
        span {
            display: none;
            margin-left: $btn-padding-x - 4;
        }
    }

    @each $color, $value in $theme-colors {

        &.btn-outline-#{$color} {
            $btn-border: $value;
            $btn-color: $value;

            // @if ($color == 'light') {
            //     $btn-border: rgba($black, .32);
            //     $btn-color: rgba($black, .8);
            // }

            border: 1px solid $btn-border;
            color: $btn-color;

            &:disabled,
            &.disabled {
                border: 1px solid lighten($btn-border, 25%);
                color: lighten($btn-color, 25%);
            }
        }
    }
    &[class^="btn-outline"] {
        padding: ($btn-padding-y - 1) ($btn-padding-x - 1);
    }
    &.btn-round {
        display: block;
        width: $container-padding-x * 2;
        height: $container-padding-x * 2;
        border-radius: 50%;
    }
    &.btn-square {
        padding-left: 0;
        padding-right: 0;
        text-align: center;
        width: $btn-height;

        i {
            margin-right: 0;
        }
    }

    &:hover,
    &:active,
    &:focus {
        outline: none;
    }
}
#scrollToTop {
    position: absolute;
    right: 0;
    top: -32px;
    transform: translate(100%, -50%);
    // position: fixed;
    z-index: 1000;
    background: $white;
    box-shadow: 0 4px 40px 0 rgba($black, .18);

    i {
        margin: 0;
    }

    @each $dimension in map-keys($grid-breakpoints) {
        @media (min-width: map-get($grid-breakpoints, $dimension)) and (max-width: (map-get($grid-breakpoints, $dimension)) + $container-padding-x * 4) {
            transform: translate(0, -50%);
        }
    };
}
